// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MSG_PLAYER_MOVE.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from MSG_PLAYER_MOVE.proto</summary>
public static partial class MSGPLAYERMOVEReflection {

  #region Descriptor
  /// <summary>File descriptor for MSG_PLAYER_MOVE.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MSGPLAYERMOVEReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChVNU0dfUExBWUVSX01PVkUucHJvdG8iVAoPTVNHX1BMQVlFUl9NT1ZFEgkK",
          "AXgYASABKAUSCQoBehgCIAEoBRIKCgJyeRgDIAEoBRIQCghwbGF5ZXJpZBgE",
          "IAEoBRINCgVzdGF0ZRgFIAEoBWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MSG_PLAYER_MOVE), global::MSG_PLAYER_MOVE.Parser, new[]{ "X", "Z", "Ry", "Playerid", "State" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class MSG_PLAYER_MOVE : pb::IMessage<MSG_PLAYER_MOVE> {
  private static readonly pb::MessageParser<MSG_PLAYER_MOVE> _parser = new pb::MessageParser<MSG_PLAYER_MOVE>(() => new MSG_PLAYER_MOVE());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MSG_PLAYER_MOVE> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MSGPLAYERMOVEReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MSG_PLAYER_MOVE() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MSG_PLAYER_MOVE(MSG_PLAYER_MOVE other) : this() {
    x_ = other.x_;
    z_ = other.z_;
    ry_ = other.ry_;
    playerid_ = other.playerid_;
    state_ = other.state_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MSG_PLAYER_MOVE Clone() {
    return new MSG_PLAYER_MOVE(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 2;
  private int z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  /// <summary>Field number for the "ry" field.</summary>
  public const int RyFieldNumber = 3;
  private int ry_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Ry {
    get { return ry_; }
    set {
      ry_ = value;
    }
  }

  /// <summary>Field number for the "playerid" field.</summary>
  public const int PlayeridFieldNumber = 4;
  private int playerid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Playerid {
    get { return playerid_; }
    set {
      playerid_ = value;
    }
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 5;
  private int state_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MSG_PLAYER_MOVE);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MSG_PLAYER_MOVE other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Z != other.Z) return false;
    if (Ry != other.Ry) return false;
    if (Playerid != other.Playerid) return false;
    if (State != other.State) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Z != 0) hash ^= Z.GetHashCode();
    if (Ry != 0) hash ^= Ry.GetHashCode();
    if (Playerid != 0) hash ^= Playerid.GetHashCode();
    if (State != 0) hash ^= State.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(X);
    }
    if (Z != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Z);
    }
    if (Ry != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Ry);
    }
    if (Playerid != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Playerid);
    }
    if (State != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(State);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
    }
    if (Z != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Z);
    }
    if (Ry != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ry);
    }
    if (Playerid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Playerid);
    }
    if (State != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MSG_PLAYER_MOVE other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Z != 0) {
      Z = other.Z;
    }
    if (other.Ry != 0) {
      Ry = other.Ry;
    }
    if (other.Playerid != 0) {
      Playerid = other.Playerid;
    }
    if (other.State != 0) {
      State = other.State;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadInt32();
          break;
        }
        case 16: {
          Z = input.ReadInt32();
          break;
        }
        case 24: {
          Ry = input.ReadInt32();
          break;
        }
        case 32: {
          Playerid = input.ReadInt32();
          break;
        }
        case 40: {
          State = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
